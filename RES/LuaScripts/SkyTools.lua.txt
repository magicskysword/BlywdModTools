require("SkyToolsBase")


---* 每次进入游戏后调用
---* 初始化人物信息表
function InitRoleToolList()
    local RoleListString = GetStrVar("SkyToolsRoleListString")
    --print(RoleListString)
    local tmpInstance = tools.unserialize(RoleListString) or {}
    ---* 设置函数
    for key, value in pairs(tmpInstance) do
        if key then
            value = InitRoleData(key,value)
        end
    end
end

---* 每次完成操作后调用
---* 储存人物信息表
function SaveRoleToolList()
    local RoleListString = tools.serialize(RoleToolList.instance)
    --print(RoleListString)
    SetStrVar("SkyToolsRoleListString",RoleListString)
end

---* 可在游戏中调用
---* 改变一个角色的名称，并将其储存
---* 游戏中Str数据： SkyToolsRoleID 角色ID
---* 游戏中Str数据： SkyToolsRoleName 需要替换的人物名称
function ChangeNPCName()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleName = GetStrVar("SkyToolsRoleName")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleName(RoleName)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 还原一个角色的名称
---* 游戏中Str数据： SkyToolsRoleID 角色ID
function RevertNPCName()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleName(RoleData.RawName)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 改变一个角色的立绘，并将其储存
---* 游戏中Str数据： SkyToolsRoleID 角色ID
---* 游戏中Str数据： SkyToolsRoleImg 需要替换的人物立绘，如果是捏脸立绘，请将#替换成&
function ChangeNPCImg()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleImg = string.gsub(GetStrVar("SkyToolsRoleImg"),"&","#")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleHeadAvata(RoleImg)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 还原一个角色的立绘
---* 游戏中Str数据： SkyToolsRoleID 角色ID
function RevertNPCImg()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleHeadAvata(RoleData.RawHeadAvata)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 改变一个角色的立绘，并将其储存
---* 游戏中Str数据： SkyToolsRoleID 角色ID
---* 游戏中Str数据： SkyToolsRoleModel 需要替换的人物模型
function ChangeNPCModel()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleModel = string.gsub(GetStrVar("SkyToolsRoleModel"),"&","#")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleModel(RoleModel)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 还原一个角色的模型
---* 游戏中Str数据： SkyToolsRoleID 角色ID
function RevertNPCModel()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleModel(RoleData.RawModelInfo)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 删除一个角色的储存信息并还原所有修改
---* 游戏中Str数据： SkyToolsRoleID 角色ID
function DeleteNPCChangeData()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleName(RoleData.RawName)
        RoleData:ChangeRoleHeadAvata(RoleData.RawHeadAvata)
        RoleData:ChangeRoleModel(RoleData.RawModelInfo)
        RoleToolList:DeleteRoleData(RoleID)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 删除所有角色的储存信息并还原所有修改
function DeleteALLNPCChangeData()
    for RoleID, RoleData in pairs(RoleToolList.instance) do
        RoleData:ChangeRoleName(RoleData.RawName)
        RoleData:ChangeRoleHeadAvata(RoleData.RawHeadAvata)
        RoleData:ChangeRoleModel(RoleData.RawModelInfo)
    end
    RoleToolList:Clear()
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 关闭所有UI
function CloseAllGameUI()
    CS.WorldManager.Instance:CloseAllGameUI()
end

--[[
调试:
RESET_LUAENV*1
RUN_SCRIPT_FUNC*SkyTools#InitRoleToolList
RUN_SCRIPT_FUNC*SkyTools#ChangeNPCImg
RUN_SCRIPT_FUNC*SkyTools#DisposeRoleListNewDay
]]
