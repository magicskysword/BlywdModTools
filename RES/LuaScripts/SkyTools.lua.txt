local tools = require("InheritWorldLuaDataTools")
local shoplist = require("InheritWorldLuaDataShopList")
local json = require("JsonTools")
require("debugBase")

local GameCoreHelper = CS.GameCoreHelper
---* 方法简化
local function RunCmd(cmdStr, contextArgs)
    local _contextArgs = contextArgs
    local _cmdStr = cmdStr:gsub("^%s*(.-)%s*$", "%1"):gsub("\t", "")
    GameCoreHelper.RunCmd(_cmdStr, _contextArgs)
end
local SetIntVar = GameCoreHelper.SetIntVar
local GetIntVar = GameCoreHelper.GetIntVar
local SetStrVar = GameCoreHelper.SetStrVar
local GetStrVar = GameCoreHelper.GetStrVar


---@class tools
local tools = {}

---* 不能在EXCEL里直接调用
---* 用splite_txt分割str，返回一个含字符串的表
---@param str string
---@param splite_txt string
---@return table
function tools.string_split(str, splite_txt)
    local str_table = {}
    while (str:find(splite_txt)) do
        table.insert(str_table, str:sub(1, str:find(splite_txt) - 1))
        str = str:sub(str:find(splite_txt) + splite_txt:len(), str:len())
    end
    table.insert(str_table, str)
    if str == "" then
        return {}
    else
        return str_table
    end
end

---* 不能在EXCEL里直接调用
---* 批量按表替换string里的内容
---* 表的格式为{pattren1 = replace1,pattren2 = replace2,...}
---@param str string
---@param gsub_list table
---@return string
function tools.string_gsub_list(str, gsub_list)
    local init_string = str
    for key, value in pairs(gsub_list) do
        init_string = init_string:gsub(key, value)
    end
    return init_string
end

---* 不能在EXCEL里直接调用
---* 序列化Table
---@param obj table
---@return string
function tools.serialize(obj)
    local lua = ""
    local t = type(obj)
    if t == "number" then
        lua = lua .. obj
    elseif t == "boolean" then
        lua = lua .. tostring(obj)
    elseif t == "string" then
        lua = lua .. string.format("%q", obj)
    elseif t == "table" then
        lua = lua .. "{\n"
    for k, v in pairs(obj) do
        lua = lua .. "[" .. tools.serialize(k) .. "]=" .. tools.serialize(v) .. ",\n"
    end
    local metatable = getmetatable(obj)
        if metatable ~= nil and type(metatable.__index) == "table" then
        for k, v in pairs(metatable.__index) do
            lua = lua .. "[" .. tools.serialize(k) .. "]=" .. tools.serialize(v) .. ",\n"
        end
    end
        lua = lua .. "}"
    elseif t == "nil" then
        return nil
    else
        error("can not serialize a " .. t .. " type.")
    end
    return lua
end


---* 不能在EXCEL里直接调用
---* 反序列化Table
---@param lua string
---@return table
function tools.unserialize(lua)
    local t = type(lua)
    if t == "nil" or lua == "" then
        return nil
    elseif t == "number" or t == "string" or t == "boolean" then
        lua = tostring(lua)
    else
        error("can not unserialize a " .. t .. " type.")
    end
    lua = "return " .. lua
    local func = load(lua)
    if func == nil then
        return nil
    end
    return func()
end

---@class RoleTool
local RoleTool = {}

---@class RoleToolList
local RoleToolList = {}

---* 不能在EXCEL里直接调用
---* 改变一个角色的立绘
---@param RoleID string
---@param RoleImgString string
function RoleTool.ChangeRoleHeadAvata(RoleData,RoleImgString)
    local tagRole = RoleData.instance
    tagRole.HeadAvata = RoleImgString
end

---* 不能在EXCEL里直接调用
---* 改变一个角色的名称
function RoleTool.ChangeRoleName(RoleData,RoleName)
    local tagRole = RoleData.instance
    tagRole.Name = RoleName
end

---* 不能在EXCEL里直接调用
---* 改变一个角色的模型
function RoleTool.ChangeRoleModel(RoleData,RoleModelInfo)
    local tagRole = RoleData.instance
    tagRole.ModelInfo = RoleModelInfo
end

---* 不能在EXCEL里直接调用
---* 初始化一个RoleTool
---@param RoleID string
---@return RoleTool
function InitRoleData(RoleID)
    local RoleData = {}
    RoleData.instance = GameCoreHelper.GetRole(RoleID)
    if RoleData.instance then
        for key, value in pairs(RoleTool) do
            RoleData[key] = value
        end
        RoleData.RawName = RoleData.instance.Name
        RoleData.Name = RoleData.RawName
        RoleData.RawHeadAvata = RoleData.instance.HeadAvata
        RoleData.HeadAvata = RoleData.RawHeadAvata
        RoleData.RawModelInfo = RoleData.instance.ModelInfo
        RoleData.ModelInfo = RoleData.RawModelInfo
        table.insert(RoleToolList,RoleData)
        return RoleData
    else
        return nil
    end
end

---* 不能在EXCEL里直接调用
---* 获取人物信息表
---@param RoleID string
---@return RoleTool
function GetRoleData(RoleID)
    local RoleData
    if RoleToolList[RoleID] then
        RoleData = RoleToolList[RoleID]
    else
        RoleData = InitRoleData(RoleID)
    end
    return RoleData
end

---* 每次进入游戏后调用
---* 初始化人物信息表
function InitRoleToolList()
    local RoleListString = GetStrVar("SkyToolsRoleListString")
    RoleToolList = tools.unserialize(RoleListString) or {}
end

---* 每次完成操作后调用
---* 储存人物信息表
function SaveRoleToolList()
    local RoleListString = tools.serialize(RoleToolList)
    SetStrVar("SkyToolsRoleListString",RoleListString)
end

---* 可在游戏中调用
---* 改变一个角色的立绘，并将其储存
---* 游戏中Str数据： SkyToolsRoleID 角色ID
---* 游戏中Str数据： SkyToolsRoleImg 需要替换的人物立绘，如果是捏脸立绘，请将#替换成&
function ChangeNPCImg()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleImg = string.gsub(GetStrVar("SkyToolsRoleImg"),"&","#")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleHeadAvata(RoleImg)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 改变一个角色的立绘，并将其储存
---* 游戏中Str数据： SkyToolsRoleID 角色ID
---* 游戏中Str数据： SkyToolsRoleName 需要替换的人物名称
function ChangeNPCName()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleName = GetStrVar("SkyToolsRoleName")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleName(RoleName)
    end
    SaveRoleToolList()
end

---* 可在游戏中调用
---* 改变一个角色的立绘，并将其储存
---* 游戏中Str数据： SkyToolsRoleID 角色ID
---* 游戏中Str数据： SkyToolsRoleModel 需要替换的人物模型，请将#替换成&
function ChangeNPCModel()
    local RoleID = GetStrVar("SkyToolsRoleID")
    local RoleModel = string.gsub(GetStrVar("SkyToolsRoleModel"),"&","#")
    local RoleData = GetRoleData(RoleID)
    if RoleData then
        RoleData:ChangeRoleModel(RoleModel)
    end
    SaveRoleToolList()
end

function CloseAllGameUI()
    CS.WorldManager.Instance:CloseAllGameUI()
end

--[[
调试:
RESET_LUAENV*1
RUN_SCRIPT_FUNC*InheritWorld#ChangeRoleImg
RUN_SCRIPT_FUNC*InheritWorld#DisposeRoleListNewDay
]]


return InheritWorldBase
